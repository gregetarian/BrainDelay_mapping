#!/bin/bash

rois

if [[ $step = s1 ]]; then
for perp in `seq 1 86`; do
	for chunk in beginning middle end; do
		for roi in $rois; do
		    if (( i % 20 == 0 )); then
		      wait
		    fi
		    ((i++))
        if [[ ! -e /data/gcooper/movie_delay/delay_mapping/grp_avg/temp/roi-"$roi" ]]; then
	        mkdir /data/gcooper/movie_delay/delay_mapping/grp_avg/temp/roi-"$roi"
        fi
			  rm /data/gcooper/movie_delay/delay_mapping/grp_avg/temp/roi-"$roi"/sub-"$perp"_"$chunk"_roi-"$roi".nii.gz

  			3dcalc -prefix /data/gcooper/movie_delay/delay_mapping/grp_avg/temp/sub-"$perp"_"$chunk"_roi-"$roi".nii.gz \
	  		-a /data/gcooper/movie_delay/delay_mapping/sub-"$perp"/delay_maps/"$chunk"/pos/roi-"$roi".nii.gz[0] \
		  	-expr 'a' &
      done

	if [[ ! -e /data/gcooper/movie_delay/delay_mapping/grp_avg/temp/roi-"$roi"/roi-"$roi"_tcat_temp.nii.gz ]]; then
		echo tcatting roi-$roi
		3dTcat -prefix /data/gcooper/movie_delay/delay_mapping/grp_avg/temp/roi-"$roi"/roi-"$roi"_tcat_temp.nii.gz \
		`ls /data/gcooper/movie_delay/delay_mapping/all_unthresh/*_roi-"$roi".nii.gz`
	fi
done

for roi in $rois; do	
    if (( i % 25 == 0 )); then
      wait
    fi
    ((i++))
	  if [[ ! -e /data/gcooper/movie_delay/delay_mapping/grp_avg/rois/roi-"$roi".nii.gz ]]; then
    3dTstat -prefix /data/gcooper/movie_delay/delay_mapping/grp_avg/rois/roi-"$roi".nii.gz \
    -nzmean /data/gcooper/movie_delay/delay_mapping/grp_avg/temp/roi-"$roi"/roi-"$roi"_tcat_temp.nii.gz &
	  fi
done

#Vectorise voxel values for each ROI in concatenated 4D file, to be used as input in subsequent affinity propagation clustering
rm maskdump.1D
3dmaskdump -noijk \
-mask /data/gcooper/movie_delay/delay_mapping/grp_avg/tcat/mask.nii.gz \
/data/gcooper/movie_delay/delay_mapping/grp_avg/tcat/tcat_all.nii.gz > maskdump.1D 


